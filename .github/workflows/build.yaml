name: "Build"

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: [self-hosted]
    permissions:
      contents: read
      packages: write
    steps: 
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Check env
        run: |
          pwd
          id
          printenv
          ls

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name : Generate docker tag
      #   id: generate-docker-tag
      #   run: |
      #     DOCKER_TAG=$(echo ${{ github.ref_name }} | tr / -)
      #     if [[ ${{ github.ref_name }} == "main" ]]; then
      #       DOCKER_TAG=latest
      #     fi
      #     echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_OUTPUT

      - name: Get Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=ref,event=branch

      # type=raw,value=${{ steps.generate-docker-tag.outputs.DOCKER_TAG }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          # push: ${{ github.ref == 'refs/heads/main' && 'true' || 'false' }}
          push: 'true'
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # - name: Build docker image
      #   run: |
      #     docker build . -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.generate-docker-tag.outputs.DOCKER_TAG }}

      # - name: Push docker image
      #   # Push the image only if the branch is the default  branch
      #   if: ${{ github.ref == 'refs/heads/main' }}
      #   run: |
      #     docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.generate-docker-tag.outputs.DOCKER_TAG }}
      - name: Clean up docker images
        run: |
          docker image prune -af